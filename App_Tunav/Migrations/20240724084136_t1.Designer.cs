// <auto-generated />
using System;
using App_Tunav.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App_Tunav.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240724084136_t1")]
    partial class t1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App_Tunav.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 2233,
                            Email = "ameni@gmail.com",
                            Name = "Ameni"
                        },
                        new
                        {
                            ClientId = 1233,
                            Email = "arwa@gmail.com",
                            Name = "Arwa"
                        },
                        new
                        {
                            ClientId = 2433,
                            Email = "oussema@example.com",
                            Name = "Oussema"
                        });
                });

            modelBuilder.Entity("App_Tunav.Models.Compte", b =>
                {
                    b.Property<int>("CompteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompteId"));

                    b.Property<int>("ClientFK")
                        .HasColumnType("int");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompteId");

                    b.HasIndex("ClientFK");

                    b.ToTable("Comptes");

                    b.HasData(
                        new
                        {
                            CompteId = 1,
                            ClientFK = 2233,
                            login = "ameni@gmail.com",
                            password = "password1"
                        },
                        new
                        {
                            CompteId = 2,
                            ClientFK = 1233,
                            login = "arwa@gmail.com",
                            password = "password2"
                        },
                        new
                        {
                            CompteId = 3,
                            ClientFK = 2433,
                            login = "oussema@gmail.com",
                            password = "password3"
                        },
                        new
                        {
                            CompteId = 6,
                            ClientFK = 2233,
                            login = "ameni@gmail.com",
                            password = "password6"
                        });
                });

            modelBuilder.Entity("App_Tunav.Models.LienCompte", b =>
                {
                    b.Property<int>("LienCompteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LienCompteId"));

                    b.Property<int>("CompteFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateClicked")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LienCompteId");

                    b.HasIndex("CompteFK");

                    b.ToTable("LiensComptes");
                });

            modelBuilder.Entity("App_Tunav.Models.Reclamation", b =>
                {
                    b.Property<int>("ReclamationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReclamationId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReclamationId");

                    b.HasIndex("ClientId");

                    b.ToTable("Reclamations");
                });

            modelBuilder.Entity("App_Tunav.Models.Compte", b =>
                {
                    b.HasOne("App_Tunav.Models.Client", "Client")
                        .WithMany("Comptes")
                        .HasForeignKey("ClientFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("App_Tunav.Models.LienCompte", b =>
                {
                    b.HasOne("App_Tunav.Models.Compte", "Compte")
                        .WithMany("LiensComptes")
                        .HasForeignKey("CompteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compte");
                });

            modelBuilder.Entity("App_Tunav.Models.Reclamation", b =>
                {
                    b.HasOne("App_Tunav.Models.Client", "Client")
                        .WithMany("Reclamations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("App_Tunav.Models.Client", b =>
                {
                    b.Navigation("Comptes");

                    b.Navigation("Reclamations");
                });

            modelBuilder.Entity("App_Tunav.Models.Compte", b =>
                {
                    b.Navigation("LiensComptes");
                });
#pragma warning restore 612, 618
        }
    }
}
